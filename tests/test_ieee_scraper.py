#!/usr/bin/env python3
"""
–¢–µ—Å—Ç IEEE Spectrum Scraper
Test script for IEEE Spectrum scraper
"""

import sys
import os
import asyncio
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_ieee_scraper_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ IEEE —Å–∫—Ä–∞–ø–µ—Ä–∞"""
    try:
        from ieee_spectrum_scraper import IEEESpectrumScraper
        print("‚úÖ IEEE Spectrum Scraper –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ IEEE Spectrum Scraper: {e}")
        return False

def test_ieee_scraper_initialization():
    """–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ IEEE —Å–∫—Ä–∞–ø–µ—Ä–∞"""
    try:
        from ieee_spectrum_scraper import IEEESpectrumScraper
        scraper = IEEESpectrumScraper()
        print("‚úÖ IEEE Spectrum Scraper –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   - –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(scraper.published_urls)} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL")
        print(f"   - –ü–∞–ø–∫–∞ –∞—Ä—Ö–∏–≤–∞: {scraper.json_folder}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ IEEE Spectrum Scraper: {e}")
        return False

def test_ieee_url_management():
    """–¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è URL"""
    try:
        from manage_ieee_urls import load_published_urls, save_published_urls
        urls = load_published_urls()
        print(f"‚úÖ –£—Ç–∏–ª–∏—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è URL —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(urls)} URL –∑–∞–≥—Ä—É–∂–µ–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è URL: {e}")
        return False

def test_ieee_scraping():
    """–¢–µ—Å—Ç —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ —Å—Ç–∞—Ç–µ–π"""
    try:
        from ieee_spectrum_scraper import IEEESpectrumScraper
        scraper = IEEESpectrumScraper()
        
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ —Å—Ç–∞—Ç–µ–π...")
        articles = scraper.scrape_ieee_articles()
        
        if articles:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π")
            for i, article in enumerate(articles[:3], 1):
                print(f"   {i}. {article['title'][:60]}...")
                print(f"      –¢–µ–º–∞: {article['topic']}")
                print(f"      –ê–≤—Ç–æ—Ä: {article['author']}")
        else:
            print("‚ö†Ô∏è  –°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–∞–π—Ç—É)")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞: {e}")
        return False

def test_ieee_article_filtering():
    """–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π"""
    try:
        from ieee_spectrum_scraper import IEEESpectrumScraper
        scraper = IEEESpectrumScraper()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏
        test_articles = [
            {
                'title': 'Test AI Article 1',
                'link': 'https://spectrum.ieee.org/test1',
                'topic': 'AI',
                'author': 'Test Author'
            },
            {
                'title': 'Test Robotics Article 2',
                'link': 'https://spectrum.ieee.org/test2',
                'topic': 'Robotics',
                'author': 'Test Author'
            }
        ]
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
        filtered = scraper.filter_unpublished_articles(test_articles)
        print(f"‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(filtered)} –∏–∑ {len(test_articles)} —Å—Ç–∞—Ç–µ–π –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return False

async def test_telegram_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram"""
    try:
        from ieee_spectrum_scraper import IEEESpectrumScraper
        scraper = IEEESpectrumScraper()
        
        if not scraper.telegram_token:
            print("‚ö†Ô∏è  Telegram —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return True
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
        bot_info = await scraper.telegram_bot.get_me()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ: @{bot_info.username}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ IEEE Spectrum Scraper")
    print("=" * 50)
    
    tests = [
        ("–ò–º–ø–æ—Ä—Ç —Å–∫—Ä–∞–ø–µ—Ä–∞", test_ieee_scraper_import),
        ("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è", test_ieee_scraper_initialization),
        ("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ URL", test_ieee_url_management),
        ("–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π", test_ieee_article_filtering),
        ("–°–∫—Ä–∞–ø–∏–Ω–≥ —Å—Ç–∞—Ç–µ–π", test_ieee_scraping),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüîç {test_name}...")
        if test_func():
            passed += 1
        else:
            print(f"   ‚ùå –¢–µ—Å—Ç '{test_name}' –Ω–µ –ø—Ä–æ—à–µ–ª")
    
    # –¢–µ—Å—Ç Telegram (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π)
    print(f"\nüîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
    try:
        asyncio.run(test_telegram_connection())
        passed += 1
    except Exception as e:
        print(f"   ‚ùå –¢–µ—Å—Ç '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram' –Ω–µ –ø—Ä–æ—à–µ–ª: {e}")
    
    total += 1
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! IEEE Spectrum Scraper –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")
    
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª —Å API –∫–ª—é—á–∞–º–∏")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python run_ieee_scraper.py")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ ieee_scraper.log")

if __name__ == "__main__":
    main() 