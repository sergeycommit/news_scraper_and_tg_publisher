#!/usr/bin/env python3
"""
Setup Scheduler for TechCrunch Scraper
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω–∞ Windows
"""

import os
import sys
import subprocess
from datetime import datetime

def create_batch_file():
    """–°–æ–∑–¥–∞–µ—Ç bat —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∞–ø–µ—Ä–∞"""
    current_dir = os.getcwd()
    python_path = sys.executable
    script_path = os.path.join(current_dir, 'run_scraper.py')
    
    batch_content = f'''@echo off
cd /d "{current_dir}"
"{python_path}" "{script_path}"
'''
    
    batch_file = os.path.join(current_dir, 'run_scraper.bat')
    
    with open(batch_file, 'w', encoding='utf-8') as f:
        f.write(batch_content)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω bat —Ñ–∞–π–ª: {batch_file}")
    return batch_file

def setup_windows_task():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Windows Task Scheduler"""
    try:
        batch_file = create_batch_file()
        
        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
        task_name = "TechCrunchScraper"
        command = f'''schtasks /create /tn "{task_name}" /tr "{batch_file}" /sc daily /st 09:00 /f'''
        
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Windows Task Scheduler...")
        print(f"–ö–æ–º–∞–Ω–¥–∞: {command}")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –≤ Windows Task Scheduler")
            print(f"üìÖ –ó–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 09:00")
            print(f"üìù –ò–º—è –∑–∞–¥–∞—á–∏: {task_name}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏:")
            print(result.stderr)
            print("\nüîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
            print(f"schtasks /create /tn \"{task_name}\" /tr \"{batch_file}\" /sc daily /st 09:00 /f")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def show_manual_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("\nüìã –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê WINDOWS TASK SCHEDULER:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ '–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á' (Task Scheduler)")
    print("2. –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É'")
    print("3. –í–≤–µ–¥–∏—Ç–µ –∏–º—è: TechCrunchScraper")
    print("4. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–¢—Ä–∏–≥–≥–µ—Ä—ã'")
    print("5. –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å'")
    print("6. –í—ã–±–µ—Ä–∏—Ç–µ '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ'")
    print("7. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä–µ–º—è: 09:00")
    print("8. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–î–µ–π—Å—Ç–≤–∏—è'")
    print("9. –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å'")
    print("10. –í –ø–æ–ª–µ '–ü—Ä–æ–≥—Ä–∞–º–º–∞' –≤–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ Python")
    print("11. –í –ø–æ–ª–µ '–ê—Ä–≥—É–º–µ–Ω—Ç—ã' –≤–≤–µ–¥–∏—Ç–µ: run_scraper.py")
    print("12. –í –ø–æ–ª–µ '–†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞' –≤–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É")
    print("13. –ù–∞–∂–º–∏—Ç–µ '–û–ö'")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ TechCrunch Scraper")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if not os.path.exists('.env'):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ config.env.example")
        return
    
    print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º bat —Ñ–∞–π–ª
    batch_file = create_batch_file()
    
    print("\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞...")
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ (—Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)")
    print("2. –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("3. –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç—å bat —Ñ–∞–π–ª")
    
    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
    
    if choice == "1":
        setup_windows_task()
    elif choice == "2":
        show_manual_instructions()
    elif choice == "3":
        print(f"‚úÖ Bat —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {batch_file}")
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main() 