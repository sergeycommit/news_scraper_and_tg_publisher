#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL IEEE Spectrum
Utility for managing IEEE Spectrum published URLs list
"""

import json
import os
import sys
from datetime import datetime

def load_published_urls():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL"""
    file_path = 'ieee_published_urls.json'
    if os.path.exists(file_path):
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
            return data.get('published_urls', [])
    return []

def save_published_urls(urls):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL"""
    file_path = 'ieee_published_urls.json'
    data = {
        'published_urls': urls,
        'last_updated': datetime.now().isoformat(),
        'total_count': len(urls)
    }
    
    with open(file_path, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(urls)} URL –≤ {file_path}")

def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    print("""
üîß –£—Ç–∏–ª–∏—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–º–∏ URL IEEE Spectrum

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  python manage_ieee_urls.py [–∫–æ–º–∞–Ω–¥–∞] [–∞—Ä–≥—É–º–µ–Ω—Ç—ã]

–ö–æ–º–∞–Ω–¥—ã:
  list                    - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ URL
  count                   - –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL
  clear                   - –û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL
  add <url>               - –î–æ–±–∞–≤–∏—Ç—å URL –≤ —Å–ø–∏—Å–æ–∫
  remove <url>            - –£–¥–∞–ª–∏—Ç—å URL –∏–∑ —Å–ø–∏—Å–∫–∞
  search <keyword>        - –ù–∞–π—Ç–∏ URL —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
  help                    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  python manage_ieee_urls.py list
  python manage_ieee_urls.py count
  python manage_ieee_urls.py clear
  python manage_ieee_urls.py add "https://spectrum.ieee.org/article/123"
  python manage_ieee_urls.py remove "https://spectrum.ieee.org/article/123"
  python manage_ieee_urls.py search "ai"
""")

def main():
    if len(sys.argv) < 2:
        show_help()
        return
    
    command = sys.argv[1].lower()
    urls = load_published_urls()
    
    if command == 'list':
        if not urls:
            print("üìù –°–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL IEEE Spectrum –ø—É—Å—Ç")
        else:
            print(f"üìù –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ URL IEEE Spectrum ({len(urls)}):")
            for i, url in enumerate(urls, 1):
                print(f"  {i}. {url}")
    
    elif command == 'count':
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL IEEE Spectrum: {len(urls)}")
    
    elif command == 'clear':
        if urls:
            confirm = input("‚ö†Ô∏è  –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫? (y/N): ")
            if confirm.lower() in ['y', 'yes', '–¥–∞']:
                save_published_urls([])
                print("üóëÔ∏è  –°–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö URL IEEE Spectrum –æ—á–∏—â–µ–Ω")
            else:
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        else:
            print("üìù –°–ø–∏—Å–æ–∫ —É–∂–µ –ø—É—Å—Ç")
    
    elif command == 'add':
        if len(sys.argv) < 3:
            print("‚ùå –û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ URL –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")
            return
        
        url = sys.argv[2]
        if url in urls:
            print(f"‚ö†Ô∏è  URL —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ: {url}")
        else:
            urls.append(url)
            save_published_urls(urls)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω URL: {url}")
    
    elif command == 'remove':
        if len(sys.argv) < 3:
            print("‚ùå –û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ URL –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            return
        
        url = sys.argv[2]
        if url in urls:
            urls.remove(url)
            save_published_urls(urls)
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω URL: {url}")
        else:
            print(f"‚ö†Ô∏è  URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ: {url}")
    
    elif command == 'search':
        if len(sys.argv) < 3:
            print("‚ùå –û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞")
            return
        
        keyword = sys.argv[2].lower()
        found_urls = [url for url in urls if keyword in url.lower()]
        
        if found_urls:
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(found_urls)} URL —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö '{keyword}':")
            for i, url in enumerate(found_urls, 1):
                print(f"  {i}. {url}")
        else:
            print(f"üîç URL —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ '{keyword}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    elif command == 'help':
        show_help()
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        show_help()

if __name__ == "__main__":
    main() 